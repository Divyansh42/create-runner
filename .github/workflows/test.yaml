name: Test runner workflow
on: [push]

jobs:
  install-runner:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout action
        uses: actions/checkout@v2
  
      - name: Check runner
        id: check-runner
        uses: redhat-actions/check-self-hosted-runner@main
        with:
          github_pat: ${{ secrets.PAT }}

      - name: Login Openshift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: diagrawa-code

      - name: Install Runner
        if: steps.check-runner.outputs.runner_present == 'false'
        uses: ./
        with:
          pat: ${{ secrets.PAT }}
          repository: create-runner
          owner: divyansh42
          runner_name: actions-runner
      
      # - name: Trigger Test workflow
      #   uses: actions/github-script@v3
      #   id: trigger-workflow
      #   with: 
      #     github-token: ${{ secrets.PAT }}
      #     debug: true
      #     script: |
      #         await github.request('POST /repos/{owner}/{repo}/dispatches', {
      #           owner: 'divyansh42',
      #           repo: 'create-runner',
      #           event_type: 'repository_dispatch'
      #         })
      - name: Trigger Test workflow
        uses: actions/github-script@v3
        id: trigger-workflow
        with: 
          github-token: ${{ secrets.PAT }}
          debug: true
          script: |
            await github.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'hello-world.yaml',
                ref: 'main'
            })
      - name: Get result
        run: echo "${{steps.trigger-workflow.outputs.result}}"

      # - name: Test Trigger
      #   uses: actions/github-script@v3
      #   id: trigger-workflow
      #   with: 
      #     github-token: ${{ secrets.PAT }}
      #     debug: true
      #     script: |
      #         await octokit.request('GET /repos/{owner}/{repo}/languages', {
      #           owner: 'octocat',
      #           repo: 'hello-world'
      #         })

